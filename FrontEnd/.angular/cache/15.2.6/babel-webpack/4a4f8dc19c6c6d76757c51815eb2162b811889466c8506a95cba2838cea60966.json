{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserDataService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"http://localhost:5000/api/user/\";\n    this.isLogin = false;\n  }\n  getGallery() {\n    return this.http.get('https://jsonplaceholder.typicode.com/photos');\n  }\n  logIn(data) {\n    return this.http.post(`${this.baseUrl}login`, data);\n  }\n  register(data) {\n    return this.http.post(`${this.baseUrl}register`, data);\n  }\n}\nUserDataService.ɵfac = function UserDataService_Factory(t) {\n  return new (t || UserDataService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserDataService,\n  factory: UserDataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAE1BC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;IAExB,YAAO,GAAG,iCAAiC;IAC3C,YAAO,GAAG,KAAK;EAH0B;EAIzCC,UAAU;IACR,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,6CAA6C,CAAC;EAErE;EAEAC,KAAK,CAACC,IAAS;IACb,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,OAAO,EAAGF,IAAI,CAAC;EACtD;EACAG,QAAQ,CAACH,IAAS;IAChB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,UAAU,EAAGF,IAAI,CAAC;EACzD;;AAhBWN,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAU,SAAfV,eAAe;EAAAW,YAFd;AAAM","names":["UserDataService","constructor","http","getGallery","get","logIn","data","post","baseUrl","register","factory","providedIn"],"sourceRoot":"","sources":["/home/mina/FrontEnd/src/app/services/user/userData/user-data.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  constructor(private http : HttpClient) { }\n\n  baseUrl = \"http://localhost:5000/api/user/\"\n  isLogin = false\n  getGallery():Observable<any>{\n    return this.http.get('https://jsonplaceholder.typicode.com/photos')\n\n  }\n\n  logIn(data: any):Observable<any>{\n    return this.http.post(`${this.baseUrl}login` , data)\n  }\n  register(data: any):Observable<any>{\n    return this.http.post(`${this.baseUrl}register` , data)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}