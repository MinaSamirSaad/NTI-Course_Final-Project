{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RestaurantsService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"http://localhost:5000/api/restaurant/\";\n  }\n  addNewRestaurant(data) {\n    return this.http.post(`${this.baseUrl}add`, data);\n  }\n  showAll() {\n    return this.http.get(`${this.baseUrl}`);\n  }\n  showSingle(id) {\n    return this.http.get(`${this.baseUrl}${id}`);\n  }\n}\nRestaurantsService.ɵfac = function RestaurantsService_Factory(t) {\n  return new (t || RestaurantsService)(i0.ɵɵinject(i1.HttpClient));\n};\nRestaurantsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RestaurantsService,\n  factory: RestaurantsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;IAExB,YAAO,GAAG,uCAAuC;EAFR;EAGzCC,gBAAgB,CAACC,IAAQ;IACvB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,KAAK,EAAEF,IAAI,CAAE;EAEpD;EACAG,OAAO;IACL,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EAEzC;EACAG,UAAU,CAACC,EAAM;IACf,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACF,OAAO,GAAGI,EAAE,EAAE,CAAG;EAEhD;;AAhBWV,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAW,SAAlBX,kBAAkB;EAAAY,YAFjB;AAAM","names":["RestaurantsService","constructor","http","addNewRestaurant","data","post","baseUrl","showAll","get","showSingle","id","factory","providedIn"],"sourceRoot":"","sources":["/home/mina/FrontEnd/src/app/services/user/restaurants/restaurants.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantsService {\n\n  constructor(private http : HttpClient) { }\n\n  baseUrl = \"http://localhost:5000/api/restaurant/\"\n  addNewRestaurant(data:any):Observable<any>{\n    return this.http.post(`${this.baseUrl}add` ,data )\n\n  }\n  showAll():Observable<any>{\n    return this.http.get(`${this.baseUrl}`)\n\n  }\n  showSingle(id:any):Observable<any>{\n    return this.http.get(`${this.baseUrl}${id}`  )\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}